// -------------------------------------------------------------
// 
// File Name: hdlsrc\tb_FFT\DUT.v
// Created: 2023-02-08 00:35:50
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 0.1
// Target subsystem base rate: 0.1
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        0.1
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// dut_re                        ce_out        0.1
// dut_im                        ce_out        0.1
// valid                         ce_out        0.1
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: DUT
// Source Path: tb_FFT/DUT
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module DUT
          (clk,
           reset,
           clk_enable,
           In1,
           In2,
           ce_out,
           dut_re,
           dut_im,
           valid);


  input   clk;
  input   reset;
  input   clk_enable;
  input   signed [15:0] In1;  // sfix16_En13
  input   In2;
  output  ce_out;
  output  signed [25:0] dut_re;  // sfix26_En13
  output  signed [25:0] dut_im;  // sfix26_En13
  output  valid;


  wire signed [25:0] FFT_out1_re;  // sfix26_En13
  wire signed [25:0] FFT_out1_im;  // sfix26_En13
  wire FFT_out2;


  FFT u_FFT (.clk(clk),
             .reset(reset),
             .enb(clk_enable),
             .dataIn(In1),  // sfix16_En13
             .validIn(In2),
             .dataOut_re(FFT_out1_re),  // sfix26_En13
             .dataOut_im(FFT_out1_im),  // sfix26_En13
             .validOut(FFT_out2)
             );

  assign dut_re = FFT_out1_re;

  assign dut_im = FFT_out1_im;

  assign valid = FFT_out2;

  assign ce_out = clk_enable;

endmodule  // DUT

